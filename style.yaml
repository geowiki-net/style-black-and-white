layers:
- query: |-
    (
    way[highway~'^(motorway|trunk|unclassified|residential|living_street|primary|secondary|tertiary|service)(|_link)$'];
    way[highway~'^(path|cycleway|footway|track|pedestrian|steps)$'];
    )
  feature:
    pre: |-
      {% set width = 1 %}
      {% set zIndexOffset = 0 %}

      {% if tags.highway matches '/^(motorway|trunk)_link$/' %}
        {% set width = 3 %}
      {% elseif tags.highway matches '/^(motorway|trunk)$/' %}
        {% set width = 5 %}
      {% elseif tags.highway matches '/^(unclassified|residential|living_street|primary|secondary|tertiary|pedestrian)(|_link)$/' %}
        {% set width = 3 %}
      {% elseif tags.highway matches '/^(service)$/' %}
        {% set width = 2 %}
        {% set zIndexOffset = -0.2 %}
      {% elseif tags.highway matches '/^(path|cycleway|footway|track|steps)$/' %}
        {% set width = 1 %}
        {% set zIndexOffset = -0.1 %}

        {% if tags.highway == 'cycleway' or tags.bicycle in ['yes', 'designated'] %}
          {% set zIndexOffset = -0.05 %}
        {% endif %}
      {% else %}
        {% set width = 0 %}
      {% endif %}
    styles: |
      {% if tags.bridge and tags.bridge != 'no' %}
      bridge_backcasing,bridge_casing,way_backcasing,way_casing,default,label
      {% else %}
      default,label
      {% endif %}
      {% if tags.highway == 'steps' %}
      ,steps
      {% endif %}

    style:bridge_backcasing:
      width: |-
        {{ width + 2 }}
      color: black
      fill: false
      zIndex: |
        -10

    style:bridge_casing:
      width: |-
        {{ width + 2 }}
      color: black
      fill: false
      lineCap: butt
      zIndex: |
        {{ tags.layer|default(0) + zIndexOffset }}

    style:way_casing:
      width: |-
        {{ width + 1 }}
      color: white
      fill: false
      lineCap: butt
      zIndex: |
        {{ tags.layer|default(0) + zIndexOffset }}

    style:way_backcasing:
      width: |-
        {{ width + 1 }}
      color: white
      fill: false
      zIndex: -10

    style:
      width: |-
        {{ width }}
      color: |-
        {% if tags.highway == 'cycleway' or (tags.highway matches '/^(path|footway|track|pedestrian)$/' and tags.bicycle in ['yes', 'designated']) %}
        #2f2f2f
        {% elseif tags.highway matches '/^(path|footway|track|service|pedestrian|steps)$/' %}
        #7f7f7f
        {% else %}
        black
        {% endif %}
      dashArray: ''
      fill: false
      lineCap: round
      zIndex: |
        {{ tags.layer|default(0) + zIndexOffset }}

    style:steps:
      color: '#3f3f3f'
      width: |-
        {{ width }}
      dashArray: '0.5,1'
      fill: false
      lineCap: butt
      zIndex: |
        {{ tags.layer|default(0) + zIndexOffset + 0.1 }}

    style:label:
      color: red
      width: 0
      fill: false
      text: '   {{ tags.name }}   '
      textPlacement: line
      textFontName: 'DejaVu Sans Oblique'
      textColor: black
      textHaloColor: '#ffffff'
      textMoveY: |-
        {{ 1 + width / 2 }}
      textFontSize: '6'
      textHaloRadius: 0.5
      textRepeatSpacing: '500'
      zIndex: 10

- query: |-
    (
    way[railway~'^(rail|subway)$'];
    )
  feature:
    pre: |-
      {% set width = 2 %}
      {% set zIndexOffset = 0 %}

    styles: |
      {% if tags.bridge and tags.bridge != 'no' %}
      bridge_backcasing,bridge_casing,way_backcasing,way_casing,
      {% endif %}
      default,track

    style:bridge_backcasing:
      width: |-
        {{ width + 2.5 }}
      color: black
      fill: false
      zIndex: |
        -10.5

    style:way_backcasing:
      width: |-
        {{ width + 1.5 }}
      color: white
      fill: false
      zIndex: |
        -10

    style:bridge_casing:
      width: |-
        {{ width + 2.5 }}
      color: black
      fill: false
      lineCap: butt
      zIndex: |
        {{ tags.layer|default(0) + zIndexOffset - 0.15 }}

    style:way_casing:
      width: |-
        {{ width + 1.5 }}
      color: white
      fill: false
      lineCap: butt
      zIndex: |
        {{ tags.layer|default(0) + zIndexOffset - 0.1 }}

    style:
      width: |-
        {{ width }}
      color: black
      dashArray: ''
      fill: false
      zIndex: |
        {{ tags.layer|default(0) + zIndexOffset + 0.1 }}

    style:track:
      width: |-
        {{ width + 1 }}
      color: black
      dashArray: '0.5,3'
      lineCap: butt
      fill: false
      zIndex: |
        {{ tags.layer|default(0) + zIndexOffset + 0.1 }}


- query: way[nothing]
  feature:
    style:
      dashArray: '0,3'

- query: nwr[building]
  feature:
    style:
      width: 0
      color: black
      fillColor: |-
        {% if id == 'w354615540' %}
        red
        {% elseif tags.amenity in ['school', 'place_of_worship'] or tags.building in ['school'] %}
        #9f9f9f
        {% else %}
        #afafaf
        {% endif %}
      fillOpacity: 1
      fill: true
      zIndex: -1

- query: nwr[waterway~'^(ditch|drain|river)$']
  feature:
    styles: casing,default,label
    style:casing:
      width: |-
        {% if tags.waterway in ['ditch', 'drain'] %}
        0.5
        {% else %}
        3
        {% endif %}
      color: '#50b7e8'
      fill: false
      zIndex: -2
    style:
      width: |-
        {% if tags.waterway in ['ditch', 'drain'] %}
        0
        {% else %}
        2
        {% endif %}
      color: '#6dc1e8'
      fill: false
      zIndex: -2

    style:label:
      color: red
      width: 0
      fill: false
      text: '   {{ tags.name }}   '
      textFontName: 'DejaVu Sans Oblique'
      textPlacement: line
      textColor: white
      textHaloColor: '#6dc1e8'
      textMoveY: 0
      textFontSize: '6'
      textHaloRadius: 0.5
      textRepeatSpacing: '500'
      zIndex: 10.1


- query: |-
    (
    way[natural=water][intermittent!=yes];
    relation[natural=water][intermittent!=yes];
    )
  feature:
    styles: default,label

    style:
      width: 0.5
      color: '#50b7e8'
      fillColor: '#6dc1e8'
      fillOpacity: 1
      fill: true
      zIndex: -2.1

    style:label:
      color: red
      width: 0
      fill: false
      text: '{{ tags.name }}'
      textPlacement: point
      textFontName: 'DejaVu Sans Oblique'
      textColor: white
      textHaloColor: '#6dc1e8'
      textMoveY: 0
      textFontSize: '6'
      textHaloRadius: 0.5
      zIndex: 10

- query: |-
    (
    way[barrier];
    )
  feature:
    style:
      fill: false
      color: '#afafaf'
      width: 0.1
      lineCap: round
      dashArray: '1,1'
      zIndex: |
        {{ tags.layer|default(0) - 0.1 }}
